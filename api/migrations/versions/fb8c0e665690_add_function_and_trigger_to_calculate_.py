"""Add function and trigger to calculate yearly vacation and expected hours

Revision ID: fb8c0e665690
Revises: cd28ca502f89
Create Date: 2024-01-22 14:36:33.854720

"""
from alembic import op
import sqlalchemy as sa
from alembic_utils.pg_function import PGFunction
from alembic_utils.pg_trigger import PGTrigger
from db.functions.calculate_vacation_and_expected_hours import calculate_vacation_and_expected_hours
from db.triggers.trg_update_yearly_expected_and_vacation import trg_update_yearly_expected_and_vacation

# revision identifiers, used by Alembic.
revision = 'fb8c0e665690'
down_revision = 'cd28ca502f89'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_entity(calculate_vacation_and_expected_hours)
    op.create_entity(trg_update_yearly_expected_and_vacation)
    # now, to populate the yearly_expected_and_vacation, we run an update statement
    # and set yearly_expected_and_vacation to null, which will set off the trigger
    conn = op.get_bind()
    query = sa.text("UPDATE journey_history set yearly_expected_and_vacation = null")
    res = conn.execute(query)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    trg_update_yearly_expected_and_vacation = PGTrigger(
        schema="public",
        signature="trg_update_yearly_expected_and_vacation",
        on_entity="public.journey_history",
        definition="# "
    )
    calculate_vacation_and_expected_hours = PGFunction(
        schema="public",
        signature="calculate_vacation_and_expected_hours()",
        definition="# "
    )
    op.drop_entity(trg_update_yearly_expected_and_vacation)
    op.drop_entity(calculate_vacation_and_expected_hours)
    conn = op.get_bind()
    query = sa.text("UPDATE journey_history set yearly_expected_and_vacation = null")
    res = conn.execute(query)
    # ### end Alembic commands ###
