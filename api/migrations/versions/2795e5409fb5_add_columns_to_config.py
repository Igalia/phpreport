"""Add columns to config table

Revision ID: 2795e5409fb5
Revises: dc2b619f65a9
Create Date: 2023-11-22 07:32:14.848231

"""
from alembic import op
import sqlalchemy as sa
from decouple import config
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = "2795e5409fb5"
down_revision = "dc2b619f65a9"
branch_labels = None
depends_on = None

VACATION_PROJECT_ID = config("VACATIONS_PROJECT_ID", 1)
YEARLY_VACATION_HOURS = config("YEARLY_HOLIDAY_HOURS")


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "config", sa.Column("vacation_project_id", sa.Integer(), nullable=True)
    )
    op.add_column(
        "config", sa.Column("yearly_vacation_hours", sa.Integer(), nullable=True)
    )
    op.add_column(
        "config",
        sa.Column("company_fte", sa.Numeric(precision=8, scale=4), nullable=True),
    )
    op.create_check_constraint("only_one_row_allowed", "config", "id=1")
    conn = op.get_bind()
    add_permissions = sa.text("REVOKE DELETE, TRUNCATE on public.config from public")
    add_vacation_project_id = sa.text(
        f"UPDATE config set vacation_project_id = {VACATION_PROJECT_ID} WHERE EXISTS (SELECT 1 from config)"
    )
    add_vacation_hours = sa.text(
        f"UPDATE config set yearly_vacation_hours = {YEARLY_VACATION_HOURS} WHERE EXISTS(SELECT 1 from config)"
    )
    add_company_fte = sa.text(
        "UPDATE config set company_fte = 40 WHERE EXISTS(SELECT 1 from config)"
    )
    conn.execute(add_permissions)
    conn.execute(add_vacation_project_id)
    conn.execute(add_vacation_hours)
    conn.execute(add_company_fte)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("config", "vacation_project_id")
    op.drop_column("config", "yearly_vacation_hours")
    op.drop_column("config", "company_fte")
    op.drop_constraint("only_one_row_allowed", "config")
    # ### end Alembic commands ###
